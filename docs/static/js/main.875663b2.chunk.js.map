{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/api.js","components/GifGrid.js","hooks/useFetchGifs.js","GifApp.js","index.js"],"names":["AddCategory","setCategories","useState","category","setCategory","onSubmit","e","preventDefault","cat","placeholder","value","onChange","target","GifGridItem","title","url","className","src","alt","getGifs","a","encodeURI","fetch","res","json","data","imagesResult","map","element","id","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","image","key","GifApp","categories","ReactDOM","render","document","getElementById"],"mappings":"iMAEaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAChBC,mBAAS,IADO,mBACzCC,EADyC,KAC/BC,EAD+B,KAahD,OACE,0BAAMC,SAPa,SAACC,GACpBA,EAAEC,iBACFN,GAAc,SAAAO,GAAG,OAAKL,GAAL,mBAAkBK,OACnCJ,EAAY,MAKV,2BACEK,YAAY,eACZC,MAAOP,EACPQ,SAfiB,SAACL,GACtBF,EAAYE,EAAEM,OAAOF,YCJZG,EAAc,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IACnC,OACE,yBAAKC,UAAU,QACb,yBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,2BAAIA,K,uBCNGK,EAAO,uCAAG,WAAOhB,GAAP,uBAAAiB,EAAA,6DACfL,EADe,iDACiCM,UAAUlB,GAD3C,8DAEHmB,MAAMP,GAFH,cAEfQ,EAFe,gBAGEA,EAAIC,OAHN,uBAGbC,EAHa,EAGbA,KACFC,EAAeD,EAAKE,KAAI,SAAAC,GAAO,MAAK,CACxCC,GAAID,EAAQC,GACZf,MAAOc,EAAQd,MACfC,IAAKa,EAAQE,OAAOC,iBAAiBhB,QAPlB,kBASdW,GATc,4CAAH,sDCIPM,EAAU,SAAC,GAAkB,IAAhB7B,EAAe,EAAfA,SAAe,ECDb,SAACA,GAAc,IAAD,EACdD,mBAAS,CACjCuB,KAAM,GACNQ,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAqBxC,OAdAC,qBAAU,WACRjB,EAAQhB,GACLkC,MACC,SAAAX,GACES,EACE,CACEV,KAAMC,EACNO,SAAS,SAKlB,CAAC9B,IAEG+B,EDnBmBI,CAAanC,GAA/BsB,EAD+B,EAC/BA,KAAMQ,EADyB,EACzBA,QAEd,OACE,oCACE,4BAAK9B,GACL,yBAAKa,UAAU,8CAEXiB,EACE,yCAEAR,EAAKE,KAAI,SAAAY,GAAK,OACZ,kBAAC,EAAD,eACEC,IAAKD,EAAMV,IACPU,UEdPE,EAAS,WAAO,IAAD,EACUvC,mBAAS,CAAC,UAAW,SAD/B,mBACnBwC,EADmB,KACPzC,EADO,KAG1B,OACE,oCACE,uCACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BACA,4BAEIyC,EAAWf,KAAI,SAACxB,GAAD,OACb,kBAAC,EAAD,CACEqC,IAAKrC,EACLA,SAAUA,UCZxBwC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.875663b2.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nexport const AddCategory = ({ setCategories }) => {\n  const [category, setCategory] = useState('');\n\n  const handleCategory = (e) => {\n    setCategory(e.target.value);\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setCategories(cat => [category, ...cat]);\n    setCategory('');\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        placeholder=\"Add category\"\n        value={category}\n        onChange={handleCategory}\n      />\n    </form>\n  )\n}","import React from 'react';\n\nexport const GifGridItem = ({ title, url }) => {\n  return (\n    <div className=\"card\">\n      <img src={url} alt={title} />\n      <p>{title}</p>\n    </div>\n  )\n}","export const getGifs = async (category) => {\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=5&api_key=y4OVO9PrrtKq9HKH0pLRCXFfS5C7Hy73`;\n  const res = await fetch(url);\n  const { data } = await res.json();\n  const imagesResult = data.map(element => ({\n    id: element.id,\n    title: element.title,\n    url: element.images.downsized_medium.url\n  }));\n  return imagesResult;\n}","import React from 'react';\nimport { GifGridItem } from './GifGridItem';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\n\nexport const GifGrid = ({ category }) => {\n  const { data, loading } = useFetchGifs(category);\n\n  return (\n    <>\n      <h3>{category}</h3>\n      <div className=\"card-grid animate__animated animate__pulse\">\n        {\n          loading ?\n            <p>Loading...</p>\n            :\n            data.map(image => (\n              <GifGridItem\n                key={image.id}\n                {...image}\n              />\n            ))\n        }\n      </div>\n    </>\n  )\n}","import { useState, useEffect } from \"react\"\nimport { getGifs } from './../helpers/api';\n\nexport const useFetchGifs = (category) => {\n  const [state, setState] = useState({\n    data: [],\n    loading: true\n  });\n\n\n  useEffect(() => {\n    getGifs(category)\n      .then(\n        imagesResult => {\n          setState(\n            {\n              data: imagesResult,\n              loading: false\n            }\n          )\n        }\n      );\n  }, [category]);\n\n  return state;\n}","import React, { useState } from 'react';\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nexport const GifApp = () => {\n  const [categories, setCategories] = useState(['Jiraiya', 'Goku']);\n\n  return (\n    <>\n      <h1>Gif App</h1>\n      <AddCategory setCategories={setCategories} />\n      <hr />\n      <ol>\n        {\n          categories.map((category) => (\n            <GifGrid\n              key={category}\n              category={category}\n            />\n          ))\n        }\n      </ol>\n    </>\n  )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GifApp } from './GifApp';\n\nReactDOM.render(\n  <GifApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}